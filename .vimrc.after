set mouse=a
" Enable mouse in all modes
"set ttymouse=xterm2

" Default colorscheme
color papercolor

" Make Vim more useful
set nocompatible

" Use the OS clipboard by default (on versions compiled with `+clipboard`)
set clipboard=unnamed

" Enhance command-line completion
set wildmenu

" Allow cursor keys in insert mode
set esckeys

" Allow backspace in insert mode
set backspace=indent,eol,start

" Optimize for fast terminal connections
set ttyfast

" Add the g flag to search/replace by default
set gdefault

" Use UTF-8 without BOM
"set encoding=utf-8 nobomb

" Don’t add empty newlines at the end of files
set nobinary
set noeol

" let ; be :
nnoremap ; :

" vim zenroom2
nnoremap <silent> <leader>z :Goyo<cr>

" Turn backup off, since most stuff is in SVN, git et.c anyway...
set viminfo=
set nobackup
set nowb
set noswapfile

" Treat long lines as break lines (useful when moving around in them)
map j gj
map k gk

" Map <Space> to / (search) and Ctrl-<Space> to ? (backwards search)
map <space> /
map <c-space> ?

" Use tabs rather than spaces
set noexpandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2

" Linebreak on 500 characters
set lbr
set tw=500
set ai "Auto indent
set si "Smart indent
set nowrap "Wrap lines

" Respect modeline in files
set modeline
set modelines=4

" Set relativenumber
set relativenumber

" Enable syntax highlighting
syntax on

" Highlight current line
set cursorline

" Show “invisible” characters
set lcs=tab:\ \ ,trail:·,eol:¬,nbsp:_
set list

" Highlight searches
set hlsearch

" Ignore case of searches
set ignorecase

" Highlight dynamically as pattern is typed
set incsearch

" Always show status line
set laststatus=2

" Disable error bells
set noerrorbells

" Don’t reset cursor to start of line when moving around.
set nostartofline

" Show the cursor position
set ruler

" Don’t show the intro message when starting Vim
set shortmess=atI

" Show the current mode
set showmode

" Show the filename in the window titlebar
set title

" Show the (partial) command as it’s being typed
set showcmd

" Start scrolling three lines before the horizontal window border
" set scrolloff=9
set scroll=3

"folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" Strip trailing whitespace (,ss)
function! StripWhitespace()
	let save_cursor = getpos(".")
	let old_query = getreg('/')
	:%s/\s\+$//e
	call setpos('.', save_cursor)
	call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>
" Save a file as root (,W)
noremap <leader>W :w !sudo tee % > /dev/null<CR>

" Automatic commands
if has("autocmd")
	" Enable file type detection
	filetype on
	" Treat .json files as .js
	autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
endif

" disable Background Color Erase (BCE) so that color schemes
" render properly when inside 256-color tmux and GNU screen.
" see also http://snk.tuxfamily.org/log/vim-256color-bce.html
if &term =~ '256color'
  set t_ut=
endif

hi SpecialKey ctermbg=NONE

" this is for vim multiple cursor escape issues
let g:multi_cursor_exit_from_insert_mode = 0

" should fix issue on json quote
let g:vim_json_syntax_conceal = 0

" EMMET with tab expander FTW!
autocmd FileType html,htmldjango,css,scss,sass imap <expr> <tab> emmet#expandAbbrIntelligent("\<tab>")

" For Ack
" Requires `ack` to be installed on your system
" Make sure to rename `ack-grep` to `ack` on a debian plaftform
if executable('ag')
	let g:ackprg = 'ag --vimgrep --nogroup --nocolor --column'
elseif executable('ack-grep')
	let g:ackprg ="ack-grep -H --nocolor --nogroup --column"
else
	let g:ackprg ="ack -H --nocolor --nogroup --column"
endif

nmap <leader>a :tab split<CR>:Ack ""<Left>
nmap <leader>A :tab split<CR>:Ack <C-r><C-w><CR>

" Should fix tabs/space issues
autocmd Filetype html,python,php setlocal ts=4 sts=4 sw=4 expandtab
autocmd Filetype ruby,cucumber,javascript,jade,pug,jsx,scala,vue.html.javascript.css,css,scss setlocal ts=2 sts=2 sw=2 expandtab
autocmd Filetype go setlocal ts=4 sts=4 sw=4 noexpandtab

" Enable cursorcolumn for `haml` files
autocmd Filetype haml setlocal cursorcolumn

let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['go', 'javascript', 'ruby', 'python', 'vue'], 'passive_filetypes': [] }
" Should fix issue with proprietary tags
let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute " ,"trimming empty <", "unescaped &" , "lacks \"action", "is not recognized!", "discarding unexpected", " attribute name \":", " attribute name \"@"]

" Javascript
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_vue_checkers = ['eslint']
" Override eslint with local version where necessary.
let local_eslint = finddir('node_modules', '.;') . '/.bin/eslint'
if matchstr(local_eslint, "^\/\\w") == ''
	let local_eslint = getcwd() . "/" . local_eslint
endif
if executable(local_eslint)
	let g:syntastic_javascript_eslint_exec = local_eslint
	let g:syntastic_vue_eslint_exec = local_eslint
endif

" Golang
let g:go_fmt_command = "goimports"
let g:go_list_type = "quickfix"

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_fail_silently = 1

let g:syntastic_go_checkers = ['govet', 'errcheck', 'go']

" Dash Awesomness
:nmap <silent> <leader>d <Plug>DashSearch

function! Multiple_cursors_before()
	exe 'NeoCompleteLock'
	echo 'Disabled autocomplete'
endfunction

function! Multiple_cursors_after()
	exe 'NeoCompleteUnlock'
	echo 'Enabled autocomplete'
endfunction

set colorcolumn=80
hi CursorLine cterm=NONE term=NONE
let g:ctrlp_extensions = ['funky']

" Trim extra space
autocmd BufWritePre * %s/\s\+$//e

let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_SR = "\<Esc>]50;CursorShape=2\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

let g:jsx_ext_required = 0
